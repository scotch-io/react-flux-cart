
@function calculateRem($size) {
    $remSize: $size / 16px;
    @return $remSize * 1rem;
}
@mixin font-size($size) {
    font-size: $size;
    font-size: calculateRem($size);
}

@mixin size($width, $height: $width) {
    width: $width;
    height: $height;
}

@mixin prefix($map, $vendors: webkit moz ms o) {
    @each $prop, $value in $map {
        @if $vendors {
            @each $vendor in $vendors {
                #{'-' + $vendor + '-' + $prop}: #{$value};
            }
        }
        #{$prop}: #{$value};
    }
}

@mixin position($position, $args) {
    @each $o in top right bottom left {
        $i: index($args, $o);

        @if $i and $i + 1 <= length($args) and type-of(nth($args, $i + 1)) == number {
            #{$o}: nth($args, $i + 1);
        }
    }
    position: $position;
}

@mixin absolute($args) {
    @include position(absolute, $args);
}

@mixin relative($args) {
    @include position(relative, $args);
}
@mixin fixed($args) {
    @include position(fixed, $args);
}

@mixin opacity($opacity) {
    opacity: $opacity;
    $opacity-ie: $opacity * 100;
    filter: alpha(opacity=$opacity-ie);
}

@mixin transition($args...) {
    -webkit-transition: $args;
    -moz-transition: $args;
    transition: $args;
}

@mixin prefix($map, $vendors: webkit moz ms o) {
    @each $prop, $value in $map {
        @if $vendors {
            @each $vendor in $vendors {
                #{'-' + $vendor + '-' + $prop}: #{$value};
            }
        }
        #{$prop}: #{$value};
    }
}

@mixin vertical-align($position: relative) {
    position: $position;
    top: 50%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
}